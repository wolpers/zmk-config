/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,physical-layout = &default_layout; };
};

/ {
    behaviors {
        td_curly: tap_dance_curly {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LBRC>, <&kp RBRC>;
        };

        td_bracket: tap_dance_bracket {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LBKT>, <&kp RBKT>;
        };

        td_paren: tap_dance_paren {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LPAR>, <&kp RPAR>;
        };

        td_angle: tap_dance_angle {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LT>, <&kp GT>;
        };

        td_slash: tap_dance_slash {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp FSLH>, <&kp PIPE>, <&kp BSLH>;
        };

        td_comma: tap_dance_comma {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp COMMA>, <&kp SEMI>;
        };

        td_dot: tap_dance_dot {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp DOT>, <&kp COLON>;
        };

        mm_bspc_del: mod_morph_backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mm_gui_alt: mod_morph_gui_alt {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LGUI>, <&kp LALT>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mm_gui_complete: mod_morph_gui_complete {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&mm_gui_alt>, <&kp RALT>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        td_quote: tap_dance_quote {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SQT>, <&kp DQT>, <&kp GRAVE>;
        };

        td_minus: tap_dance_minus {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp MINUS>, <&kp UNDER>, <&kp TILDE>;
        };

         td_n1: tap_dance_n1 {
             compatible = "zmk,behavior-tap-dance";
             #binding-cells = <0>;
             tapping-term-ms = <200>;
             bindings = <&kp N1>, <&kp EXCL>, <&kp F1>;
         };

         td_n2: tap_dance_n2 {
             compatible = "zmk,behavior-tap-dance";
             #binding-cells = <0>;
             tapping-term-ms = <200>;
             bindings = <&kp N2>, <&kp AT>, <&kp F2>;
         };

         td_n3: tap_dance_n3 {
             compatible = "zmk,behavior-tap-dance";
             #binding-cells = <0>;
             tapping-term-ms = <200>;
             bindings = <&kp N3>, <&kp HASH>, <&kp F3>;
         };

         td_n4: tap_dance_n4 {
             compatible = "zmk,behavior-tap-dance";
             #binding-cells = <0>;
             tapping-term-ms = <200>;
             bindings = <&kp N4>, <&kp DLLR>, <&kp F4>;
         };

         td_n5: tap_dance_n5 {
             compatible = "zmk,behavior-tap-dance";
             #binding-cells = <0>;
             tapping-term-ms = <200>;
             bindings = <&kp N5>, <&kp PRCNT>, <&kp F5>;
         };

         td_n6: tap_dance_n6 {
             compatible = "zmk,behavior-tap-dance";
             #binding-cells = <0>;
             tapping-term-ms = <200>;
             bindings = <&kp N6>, <&kp CARET>, <&kp F6>;
         };

         td_n7: tap_dance_n7 {
             compatible = "zmk,behavior-tap-dance";
             #binding-cells = <0>;
             tapping-term-ms = <200>;
             bindings = <&kp N7>, <&kp AMPS>, <&kp F7>;
         };

         td_n8: tap_dance_n8 {
             compatible = "zmk,behavior-tap-dance";
             #binding-cells = <0>;
             tapping-term-ms = <200>;
             bindings = <&kp N8>, <&kp ASTRK>, <&kp F8>;
         };

         td_n9: tap_dance_n9 {
             compatible = "zmk,behavior-tap-dance";
             #binding-cells = <0>;
             tapping-term-ms = <200>;
             bindings = <&kp N9>, <&trans>, <&kp F9>;
         };

         td_n0: tap_dance_n0 {
              compatible = "zmk,behavior-tap-dance";
              #binding-cells = <0>;
              tapping-term-ms = <200>;
              bindings = <&kp NUMBER_0>, <&trans>, <&kp F10>;
          };

         td_f11: tap_dance_f11 {
             compatible = "zmk,behavior-tap-dance";
             #binding-cells = <0>;
             tapping-term-ms = <200>;
             bindings = <&trans>, <&trans>, <&kp F11>;
         };

         td_f12: tap_dance_f12 {
             compatible = "zmk,behavior-tap-dance";
             #binding-cells = <0>;
             tapping-term-ms = <200>;
             bindings = <&trans>, <&trans>, <&kp F12>;
         };

        td_s_eszett: tap_dance_s_eszett {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp S>, <&kp RA(S)>; // ß
        };

        // German umlauts with proper shift support
        mm_a_umlaut: mod_morph_a_umlaut {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RA(Q)>, <&kp RA(LS(Q))>; // ä / Ä
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mm_o_umlaut: mod_morph_o_umlaut {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RA(P)>, <&kp RA(LS(P))>; // ö / Ö
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mm_u_umlaut: mod_morph_u_umlaut {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RA(Y)>, <&kp RA(LS(Y))>; // ü / Ü
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        td_a_umlaut: tap_dance_a_umlaut {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp A>, <&mm_a_umlaut>;
        };

        td_o_umlaut: tap_dance_o_umlaut {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp O>, <&mm_o_umlaut>;
        };

        td_u_umlaut: tap_dance_u_umlaut {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp U>, <&mm_u_umlaut>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTZ";
            bindings = <
&kp ESCAPE        &kp Q  &kp W  &kp E             &kp R  &kp T    &trans  &trans  &kp Z      &td_u_umlaut  &kp I         &td_o_umlaut    &kp P      &kp ENTER
&kp LEFT_SHIFT    &td_a_umlaut  &td_s_eszett  &kp D             &kp F  &kp G    &trans  &trans  &kp H      &kp J  &kp K         &kp L    &td_quote  &kp RIGHT_SHIFT
&kp LEFT_CONTROL  &kp Y  &kp X  &kp C             &kp V  &kp B                    &kp N      &kp M  &td_comma     &td_dot  &td_slash  &kp RIGHT_CONTROL
                                &mm_gui_complete  &mo 1  &kp TAB                  &kp SPACE  &mo 2  &mm_bspc_del
            >;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &trans     &trans       &trans     &trans     &trans  &trans  &trans  &td_minus  &td_n1  &td_n2  &td_n3  &trans  &kp EQUAL
&trans  &td_angle  &td_bracket  &td_curly  &td_paren  &trans  &trans  &trans  &kp PLUS   &td_n4  &td_n5  &td_n6  &trans  &trans
&trans  &trans     &trans       &trans     &trans     &trans                  &trans     &td_n7  &td_n8  &td_n9  &td_f11  &td_f12
                                &trans     &trans     &trans                  &trans     &td_n0  &trans
            >;
        };
        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL  &kp AT    &kp UP    &kp DLLR   &kp PRCNT  &trans  &trans  &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &trans
&trans  &trans    &kp LEFT  &kp DOWN  &kp RIGHT  &trans     &trans  &trans  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &trans
&trans  &trans    &trans    &trans    &trans     &trans                     &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &trans
                            &trans    &trans     &trans                     &trans     &trans     &trans
            >;
        };

        extra_layer_1 {
            display-name = "EXTRA 1";
            bindings = <
&bt BT_CLR  &bootloader  &sys_reset  &trans  &trans  &trans  &trans  &trans  &trans  &bt BT_SEL 0    &bt BT_SEL 1     &bt BT_SEL 2  &trans  &trans
&trans      &trans       &trans      &trans  &trans  &trans  &trans  &trans  &trans  &bt BT_SEL 3    &bt BT_SEL 4     &trans        &trans  &trans
&trans      &trans       &trans      &trans  &trans  &trans                  &trans  &studio_unlock  &rgb_ug RGB_TOG  &trans        &trans  &trans
                                     &trans  &trans  &trans                  &trans  &trans          &trans
            >;
        };
    };
};
